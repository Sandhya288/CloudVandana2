2. Enter a Roman Number as input and convert it to an integer. (Example: IX = 9): 
Import.java.util.HashMap; 
public class RomanToInteger { 
public static int romanToInt(String s) { 
// Create a HashMap to store the values of Roman numerals 
HashMap<Character, Integer> romanValues = new HashMap<>(); 
romanValues.put('I', 1); 
romanValues.put('V', 5); 
romanValues.put('X', 10); 
romanValues.put('L', 50); 
romanValues.put('C', 100); 
romanValues.put('D', 500); 
romanValues.put('M', 1000); 
int result = 0; 
for (int i = 0; i < s.length(); i++) { 
// Get the value of the current Roman numeral 
int curValue = romanValues.get(s.charAt(i)); 
// If the next numeral is larger, subtract the current value 
if (i < s.length() - 1 && curValue < romanValues.get(s.charAt(i + 1))) { 
result -= curValue; 
} else { 
result += curValue; 
} 
} 
return result; 
} 
public static void main(String[] args) { 
// Example usage 
String romanNumeral = "IX"; 
int integerEquivalent = romanToInt(romanNumeral); 
System.out.println("The integer equivalent of " + romanNumeral + " is " + 
integerEquivalent); 
} 
}
